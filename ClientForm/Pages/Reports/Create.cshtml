@page
@model ClientForm.Pages.Reports.CreateModel
@{
    ViewData["Title"] = "Создать новый отчёт";
}

<div class="container mt-5">
    <h1>@ViewData["Title"]</h1>
    <hr />

    <form method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <!-- Название отчёта -->
        <div class="form-group mb-3">
            <label asp-for="Input.Name" class="control-label"></label>
            <input asp-for="Input.Name" class="form-control" />
            <span asp-validation-for="Input.Name" class="text-danger"></span>
        </div>

        <!-- Поле загрузки файла -->
        <div class="form-group mb-4">
            <label asp-for="Input.File" class="control-label"></label>
            <input type="file" asp-for="Input.File" class="form-control" accept=".xlsx,.xls" />
            <span asp-validation-for="Input.File" class="text-danger"></span>
            <small class="form-text text-muted">Поддерживаются файлы Excel (.xlsx, .xls)</small>
        </div>

        <!-- Кнопки отправки и возврата -->
        <div class="form-group">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Создать
            </button>
            <a asp-page="./Index" class="btn btn-secondary ms-2">
                <i class="bi bi-arrow-left"></i> Назад к списку
            </a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Динамическое обновление имени файла
        document.getElementById('Input_File').addEventListener('change', function(e) {
            const fileName = e.target.files[0].name;
            document.querySelector('label[for="Input_File"]').textContent = `Файл: ${fileName}`;
        });
    </script>
}